// <auto-generated />
using System;
using GrouosAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GrouosAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240219112013_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GrouosAPI.Models.Admin", b =>
                {
                    b.Property<Guid>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<long>("Phno")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AdminId");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("GrouosAPI.Models.Application", b =>
                {
                    b.Property<int>("appId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("appName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("appId");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("GrouosAPI.Models.Category", b =>
                {
                    b.Property<int>("catId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("catName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("catId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("GrouosAPI.Models.Groups", b =>
                {
                    b.Property<int>("groupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("GroupImage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Pin")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("appId")
                        .HasColumnType("int");

                    b.Property<int>("catId")
                        .HasColumnType("int");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("groupDesc")
                        .HasColumnType("longtext");

                    b.Property<string>("groupLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("groupName")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("longtext");

                    b.Property<string>("groupRules")
                        .HasColumnType("longtext");

                    b.Property<string>("tags")
                        .HasColumnType("longtext");

                    b.HasKey("groupId");

                    b.HasIndex("appId");

                    b.HasIndex("catId");

                    b.ToTable("ChatGroups");
                });

            modelBuilder.Entity("GrouosAPI.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("ReportDesc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReportReason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ReportId");

                    b.HasIndex("GroupId");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("GrouosAPI.Models.Groups", b =>
                {
                    b.HasOne("GrouosAPI.Models.Application", "Application")
                        .WithMany("groups")
                        .HasForeignKey("appId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrouosAPI.Models.Category", "Category")
                        .WithMany("groups")
                        .HasForeignKey("catId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GrouosAPI.Models.Report", b =>
                {
                    b.HasOne("GrouosAPI.Models.Groups", "Group")
                        .WithMany("Reports")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("GrouosAPI.Models.Application", b =>
                {
                    b.Navigation("groups");
                });

            modelBuilder.Entity("GrouosAPI.Models.Category", b =>
                {
                    b.Navigation("groups");
                });

            modelBuilder.Entity("GrouosAPI.Models.Groups", b =>
                {
                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
